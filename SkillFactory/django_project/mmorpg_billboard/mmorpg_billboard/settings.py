"""
Django settings for mmorpg_billboard project.

Generated by 'django-admin startproject' using Django 5.1.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""
import os
from pathlib import Path
from dotenv import load_dotenv

load_dotenv()

# Base directory configuration
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings
SECRET_KEY = 'django-insecure-h2ux1ge4)56aplx7jh$di9y*c=uniq9ep*meam-a!u5=-4v$-f'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['127.0.0.1'] # List of allowed hosts

SITE_ID = 1 # Current site identifier

# Application definition
INSTALLED_APPS = [
    # Built-in Django apps
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.sites',
    'django.contrib.staticfiles',

    # Authentication system
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.yandex',  # Yandex authentication integration

    # Custom applications
    'forum',
]

# Middleware configuration
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'allauth.account.middleware.AccountMiddleware',
    'django.contrib.sites.middleware.CurrentSiteMiddleware',
]

ROOT_URLCONF = 'mmorpg_billboard.urls'

# Template configuration
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'forum.context_processors.categories',
            ],
        },
    },
]

WSGI_APPLICATION = 'mmorpg_billboard.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

# Database configuration
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'ru'

TIME_ZONE = 'Asia/Yekaterinburg'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'
STATICFILES_DIRS = [BASE_DIR / 'static',]
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

# Media files configuration
MEDIA_URL = 'media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# File upload limits
DATA_UPLOAD_MAX_MEMORY_SIZE = 104857600  # 100 MB
FILE_UPLOAD_MAX_SIZE = 104857600  # 100 MB

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Email server settings.
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.yandex.ru'  # SMTP server address.
EMAIL_PORT = 465  # SMTP server port.
EMAIL_HOST_USER = os.getenv('EMAIL_HOST_USER')  # Email username from environment variable
EMAIL_HOST_PASSWORD = os.getenv('EMAIL_HOST_PASSWORD')  # Email password from environment variable
DEFAULT_FROM_EMAIL = EMAIL_HOST_USER+'@yandex.ru' # Default sender email
EMAIL_USE_SSL = True  # Use SSL encryption.

# Authentication backends configuration
AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
    'allauth.account.auth_backends.AuthenticationBackend',
]
# Allauth settings
ACCOUNT_UNIQUE_EMAIL = True  # Email must be unique.
ACCOUNT_EMAIL_VERIFICATION = 'mandatory'  # Email verification is mandatory.

ACCOUNT_EMAIL_CONFIRMATION_EXPIRE_DAYS = 1  # Email confirmation link expiration period (1 day).
ACCOUNT_SIGNUP_FIELDS = ['email*', 'username*', 'password1*', 'password2*']  # Required signup fields.
ACCOUNT_LOGIN_METHODS = {'email'}  # Login method (email only).
# Локализация шаблонов писем
ACCOUNT_EMAIL_SUBJECT_PREFIX = '[MMORPG Forum] ' # Prefix for email subjects.
ACCOUNT_LOGOUT_ON_PASSWORD_CHANGE = True  # Logout user after password change.
ACCOUNT_PASSWORD_MIN_LENGTH = 8  # Minimum password length.
ACCOUNT_PASSWORD_COMPLEXITY_CHECK = True  # Password complexity check.

ACCOUNT_EMAIL_VERIFICATION_BY_CODE_ENABLED = True # Enable email verification by code.

# Login/Logout redirects
LOGIN_URL = '/accounts/login/' # URL for login page.
LOGIN_REDIRECT_URL = '/'  # Redirect URL after successful login.
LOGOUT_REDIRECT_URL = '/'  # Redirect URL after logout.

# Celery configuration
CELERY_BROKER_URL = os.getenv('CELERY_BROKER_URL') # Celery broker URL.
CELERY_RESULT_BACKEND = os.getenv('CELERY_RESULT_BACKEND') # Celery result backend.
CELERY_ACCEPT_CONTENT = ['application/json'] # Accepted content types.
CELERY_TASK_SERIALIZER = 'json' # Task serialization format.
CELERY_RESULT_SERIALIZER = 'json' # Result serialization format.
